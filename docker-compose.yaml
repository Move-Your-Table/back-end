version: "3.8"

services:
  nestjs_dev:
    profiles: ["dev-container", "all"]
    image: myt/back-end:dev
    container_name: Nest.JS-Dev
    ports:
      - ${NESTJS_PORT}:3000
    build:
      dockerfile: ./docker/Nest_Dev_Dockerfile
      context: .
    volumes:
      - .:/app
      - ./node_modules:/app/node_modules
      - ./dist:/app/dist
    depends_on:
      - mongodb_dev
      - rabbitmq_dev
    environment:
      - NESTJS_PORT=3000
      - MONGO_ENDPOINT=mongodb_dev
      - MONGO_PORT=27017
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INIT_DB=${MONGO_INIT_DB}
      - RABBITMQ_ENDPOINT=rabbitmq_dev
      - RABBITMQ_PORT=5672      
  nestjs_staging:
    profiles: ["all", "staging"]
    image: myt/back-end:staging
    container_name: Nest.JS-Staging
    ports:
      - ${NESTJS_PORT}:3000
    build:
      dockerfile: ./docker/Nest_Prod_Dockerfile
      context: .
    depends_on:
      - mongodb_dev
      - rabbitmq_dev
    environment:
      - NESTJS_PORT=3000
      - MONGO_ENDPOINT=mongodb_dev
      - MONGO_PORT=27017
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INIT_DB=${MONGO_INIT_DB}
      - RABBITMQ_ENDPOINT=rabbitmq_dev
      - RABBITMQ_PORT=5672 
  nestjs_prod:
    profiles: ["all", "prod"]
    image: myt/back-end:prod
    container_name: Nest.JS-Prod
    ports:
      - ${NESTJS_PORT}:3000
    build:
      dockerfile: ./docker/Nest_Prod_Dockerfile
      context: .
    depends_on:
      - mongodb_prod
      - rabbitmq_prod
    environment:
      - NESTJS_PORT=3000
      - MONGO_ENDPOINT=mongodb_prod
      - MONGO_PORT=27017
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INIT_DB=${MONGO_INIT_DB}
      - RABBITMQ_ENDPOINT=rabbitmq_prod
      - RABBITMQ_PORT=5672      
  
  rabbitmq_dev:
    profiles: ["dev-local", "dev-container", "all", "staging"]
    image: rabbitmq:3.9.10-management-alpine
    container_name: RabbitMQ-Dev
    ports:
      - ${RABBITMQ_EXTERNAL_PORT}:5672
      - ${RABBITMQ_EXTERNAL_MANAGEMENT_PORT}:15672
  rabbitmq_prod:
    profiles: ["prod"]
    image: rabbitmq:3.9.10-alpine
    container_name: RabbitMQ-Prod
  
  mongodb_dev:
    profiles: ["dev-local", "dev-container", "all", "staging"]
    image: myt/back-end-db:1.0
    container_name: MongoDB-Dev
    build:
      dockerfile: ./docker/Mongo_Dockerfile
      context: .
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INIT_DB: ${MONGO_INIT_DB}
    ports:
      - ${MONGO_EXTERNAL_PORT}:27017
  mongodb_prod:
    profiles: ["prod", "all"]
    image: mongo:5.0.4
    container_name: MongoDB-Prod
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INIT_DB: ${MONGO_INIT_DB}
